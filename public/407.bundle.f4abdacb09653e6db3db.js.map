{"version":3,"file":"407.bundle.f4abdacb09653e6db3db.js","mappings":"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","sources":["webpack:///../../../extensions/cornerstone/src/ViewportLoadingIndicator.js","webpack:///../../../extensions/cornerstone/src/_shared/setCornerstoneMeasurementActive.js","webpack:///../../../extensions/cornerstone/src/_shared/getTools.js","webpack:///../../../extensions/cornerstone/src/ViewportOverlay.js","webpack:///../../../extensions/cornerstone/src/OHIFCornerstoneViewport.js","webpack:///../../../extensions/cornerstone/src/_shared/setActiveAndPassiveToolsForElement.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewportLoadingIndicator = ({ error }) => {\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <div className=\"bg-black h-full w-full absolute opacity-50\"></div>\r\n        <div className=\"text-primary-light text-xl font-light\">\r\n          <h4>Error Loading Image</h4>\r\n          <p>An error has occurred.</p>\r\n          <p>{error.message}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-black h-full w-full absolute opacity-50\"></div>\r\n      <div className=\"absolute transparent w-full h-full flex items-center justify-center\">\r\n        <p className=\"text-primary-light text-xl font-light\">Loading...</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nViewportLoadingIndicator.propTypes = {\r\n  percentComplete: PropTypes.number,\r\n  error: PropTypes.object,\r\n};\r\n\r\nViewportLoadingIndicator.defaultProps = {\r\n  percentComplete: 0,\r\n  error: null,\r\n};\r\n\r\nexport default ViewportLoadingIndicator;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nconst { globalImageIdSpecificToolStateManager } = cornerstoneTools;\r\n\r\nexport default function setCornerstoneMeasurementActive(measurement) {\r\n  const { id } = measurement;\r\n\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  Object.keys(toolState).forEach(imageId => {\r\n    const imageIdSpecificToolState = toolState[imageId];\r\n\r\n    Object.keys(imageIdSpecificToolState).forEach(toolType => {\r\n      const toolSpecificToolState = imageIdSpecificToolState[toolType];\r\n\r\n      const toolSpecificToolData = toolSpecificToolState.data;\r\n\r\n      if (toolSpecificToolData && toolSpecificToolData.length) {\r\n        toolSpecificToolData.forEach(data => {\r\n          data.active = data.id === id ? true : false;\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const enabledElements = cornerstoneTools.store.state.enabledElements;\r\n\r\n  enabledElements.forEach(element => {\r\n    try {\r\n      cornerstone.updateImage(element);\r\n    } catch (ex) {\r\n      // https://github.com/cornerstonejs/cornerstone/blob/master/src/updateImage.js#L16\r\n      // This fails if enabledElement.image is undefined and we have no layers\r\n      // Instead of throwing, it should _probably_ do nothing.\r\n      // We'll just swallow the exception\r\n    }\r\n  });\r\n}\r\n","import csTools from 'cornerstone-tools';\r\n\r\nconst toolsGroupedByType = {\r\n  touch: [csTools.PanMultiTouchTool, csTools.ZoomTouchPinchTool],\r\n  annotations: [\r\n    csTools.ArrowAnnotateTool,\r\n    csTools.BidirectionalTool,\r\n    csTools.LengthTool,\r\n    csTools.AngleTool,\r\n    csTools.FreehandRoiTool,\r\n    csTools.EllipticalRoiTool,\r\n    csTools.DragProbeTool,\r\n    csTools.RectangleRoiTool,\r\n  ],\r\n  other: [\r\n    csTools.PanTool,\r\n    csTools.ZoomTool,\r\n    csTools.WwwcTool,\r\n    csTools.WwwcRegionTool,\r\n    csTools.MagnifyTool,\r\n    csTools.StackScrollTool,\r\n    csTools.StackScrollMouseWheelTool,\r\n    csTools.OverlayTool,\r\n  ],\r\n};\r\n\r\nexport default function getTools() {\r\n  const tools = [];\r\n  Object.keys(toolsGroupedByType).forEach(toolsGroup =>\r\n    tools.push(...toolsGroupedByType[toolsGroup])\r\n  );\r\n\r\n  return tools;\r\n}\r\n\r\nexport { toolsGroupedByType };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstone from 'cornerstone-core';\r\nimport classnames from 'classnames';\r\n\r\nconst ViewportOverlay = ({\r\n  imageId,\r\n  scale,\r\n  windowWidth,\r\n  windowCenter,\r\n  imageIndex,\r\n  stackSize,\r\n  activeTools,\r\n}) => {\r\n  const topLeft = 'top-viewport left-viewport';\r\n  const topRight = 'top-viewport right-viewport-scrollbar';\r\n  const bottomRight = 'bottom-viewport right-viewport-scrollbar';\r\n  const bottomLeft = 'bottom-viewport left-viewport';\r\n  const overlay = 'absolute pointer-events-none';\r\n\r\n  const isZoomActive = activeTools.includes('Zoom');\r\n  const isWwwcActive = activeTools.includes('Wwwc');\r\n\r\n  if (!imageId) {\r\n    return null;\r\n  }\r\n\r\n  // TODO: this component should be presentational only. Right now it has a weird dependency on Cornerstone\r\n  const generalImageModule =\r\n    cornerstone.metaData.get('generalImageModule', imageId) || {};\r\n  const { instanceNumber } = generalImageModule;\r\n\r\n  return (\r\n    <div className=\"text-primary-light\">\r\n      <div\r\n        data-cy={'viewport-overlay-top-left'}\r\n        className={classnames(overlay, topLeft)}\r\n      >\r\n        {isZoomActive && (\r\n          <div className=\"flex flex-row\">\r\n            <span className=\"mr-1\">Zoom:</span>\r\n            <span className=\"font-light\">{scale.toFixed(2)}x</span>\r\n          </div>\r\n        )}\r\n        {isWwwcActive && (\r\n          <div className=\"flex flex-row\">\r\n            <span className=\"mr-1\">W:</span>\r\n            <span className=\"ml-1 mr-2 font-light\">\r\n              {windowWidth.toFixed(0)}\r\n            </span>\r\n            <span className=\"mr-1\">L:</span>\r\n            <span className=\"ml-1 font-light\">{windowCenter.toFixed(0)}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div\r\n        data-cy={'viewport-overlay-top-right'}\r\n        className={classnames(overlay, topRight)}\r\n      >\r\n        {stackSize > 1 && (\r\n          <div className=\"flex flex-row\">\r\n            <span className=\"mr-1\">I:</span>\r\n            <span className=\"font-light\">\r\n              {`${instanceNumber} (${imageIndex}/${stackSize})`}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div\r\n        data-cy={'viewport-overlay-bottom-right'}\r\n        className={classnames(overlay, bottomRight)}\r\n      ></div>\r\n      <div\r\n        data-cy={'viewport-overlay-bottom-left'}\r\n        className={classnames(overlay, bottomLeft)}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nViewportOverlay.propTypes = {\r\n  scale: PropTypes.number.isRequired,\r\n  windowWidth: PropTypes.number.isRequired,\r\n  windowCenter: PropTypes.number.isRequired,\r\n  imageId: PropTypes.string.isRequired,\r\n  imageIndex: PropTypes.number.isRequired,\r\n  stackSize: PropTypes.number.isRequired,\r\n  activeTools: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nViewportOverlay.defaultProps = {\r\n  activeTools: [],\r\n};\r\n\r\nexport default ViewportOverlay;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport CornerstoneViewport from 'react-cornerstone-viewport';\r\nimport OHIF from '@ohif/core';\r\nimport { useCine, useViewportGrid } from '@ohif/ui';\r\n\r\nimport ViewportLoadingIndicator from './ViewportLoadingIndicator';\r\nimport setCornerstoneMeasurementActive from './_shared/setCornerstoneMeasurementActive';\r\nimport setActiveAndPassiveToolsForElement from './_shared/setActiveAndPassiveToolsForElement';\r\nimport getTools from './_shared/getTools';\r\n\r\nimport ViewportOverlay from './ViewportOverlay';\r\n\r\nconst scrollToIndex = cornerstoneTools.importInternal('util/scrollToIndex');\r\n\r\nconst BaseAnnotationTool = cornerstoneTools.importInternal(\r\n  'base/BaseAnnotationTool'\r\n);\r\n\r\nconst { StackManager } = OHIF.utils;\r\n\r\nfunction OHIFCornerstoneViewport({\r\n  children,\r\n  dataSource,\r\n  displaySet,\r\n  onElementEnabled,\r\n  element,\r\n  viewportIndex,\r\n  servicesManager,\r\n  commandsManager,\r\n}) {\r\n  const {\r\n    ToolBarService,\r\n    DisplaySetService,\r\n    MeasurementService,\r\n    HangingProtocolService,\r\n  } = servicesManager.services;\r\n  const [viewportData, setViewportData] = useState(null);\r\n  const [{ cines }, cineService] = useCine();\r\n  const [{ viewports }, viewportGridService] = useViewportGrid();\r\n\r\n  const isMounted = useRef(false);\r\n  const stageChangedRef = useRef(false);\r\n\r\n  const onNewImage = (element, callback) => {\r\n    const handler = () => {\r\n      element.removeEventListener(cornerstone.EVENTS.IMAGE_RENDERED, handler);\r\n      callback(element, ToolBarService);\r\n    };\r\n    element.addEventListener(cornerstone.EVENTS.IMAGE_RENDERED, handler);\r\n  };\r\n\r\n  const defaultOnElementEnabled = evt => {\r\n    const eventData = evt.detail;\r\n    const targetElement = eventData.element;\r\n    const tools = getTools();\r\n    const toolAlias = ToolBarService.state.primaryToolId;\r\n\r\n    // Activate appropriate tool bindings for element\r\n    setActiveAndPassiveToolsForElement(targetElement, tools);\r\n    cornerstoneTools.setToolActiveForElement(targetElement, toolAlias, {\r\n      mouseButtonMask: 1,\r\n    });\r\n\r\n    // Set dashed, based on tracking, for this viewport\r\n    const allTools = cornerstoneTools.store.state.tools;\r\n    const toolsForElement = allTools.filter(\r\n      tool => tool.element === targetElement\r\n    );\r\n\r\n    toolsForElement.forEach(tool => {\r\n      if (tool instanceof BaseAnnotationTool) {\r\n        const configuration = tool.configuration;\r\n\r\n        configuration.renderDashed = true;\r\n\r\n        tool.configuration = configuration;\r\n      }\r\n    });\r\n\r\n    // Update image after setting tool config\r\n    const enabledElement = cornerstone.getEnabledElement(targetElement);\r\n\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(targetElement);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n      StackManager.clearStacks();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { unsubscribe } = HangingProtocolService.subscribe(\r\n      HangingProtocolService.EVENTS.STAGE_CHANGE,\r\n      () => {\r\n        stageChangedRef.current = true;\r\n      }\r\n    );\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    cineService.setCine({ id: viewportIndex });\r\n  }, [viewportIndex]);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      sopClassUids,\r\n    } = displaySet;\r\n\r\n    if (!StudyInstanceUID || !displaySetInstanceUID) {\r\n      return;\r\n    }\r\n\r\n    if (sopClassUids && sopClassUids.length > 1) {\r\n      console.warn(\r\n        'More than one SOPClassUID in the same series is not yet supported.'\r\n      );\r\n    }\r\n\r\n    _getViewportData(dataSource, displaySet).then(data => {\r\n      if (isMounted.current) setViewportData(data);\r\n    });\r\n  }, [dataSource, displaySet, viewportIndex]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribeFromJumpToMeasurementEvents = _subscribeToJumpToMeasurementEvents(\r\n      MeasurementService,\r\n      DisplaySetService,\r\n      element,\r\n      viewportIndex,\r\n      displaySet.displaySetInstanceUID,\r\n      viewportGridService\r\n    );\r\n\r\n    _checkForCachedJumpToMeasurementEvents(\r\n      MeasurementService,\r\n      DisplaySetService,\r\n      element,\r\n      viewportIndex,\r\n      displaySet.displaySetInstanceUID,\r\n      viewportGridService\r\n    );\r\n\r\n    // reseting the HP stage changed flag\r\n    if (element) {\r\n      onNewImage(element, () => {\r\n        stageChangedRef.current = false;\r\n      });\r\n    }\r\n\r\n    // running HP-defined callbacks: invert, window level ...\r\n    if (element && displaySet.renderedCallback) {\r\n      onNewImage(element, displaySet.renderedCallback);\r\n    }\r\n\r\n    return () => {\r\n      unsubscribeFromJumpToMeasurementEvents();\r\n    };\r\n  }, [element, displaySet]);\r\n\r\n  let childrenWithProps = null;\r\n\r\n  if (!viewportData) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    imageIds,\r\n    initialImageIdIndex,\r\n    // If this comes from the instance, would be a better default\r\n    // `FrameTime` in the instance\r\n    // frameRate = 0,\r\n  } = viewportData.stack;\r\n\r\n  // TODO: Does it make more sense to use Context?\r\n  if (children && children.length) {\r\n    childrenWithProps = children.map((child, index) => {\r\n      return (\r\n        child &&\r\n        React.cloneElement(child, {\r\n          viewportIndex,\r\n          key: index,\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  // We have...\r\n  // StudyInstanceUid, DisplaySetInstanceUid\r\n  // Use displaySetInstanceUid --> SeriesInstanceUid\r\n  // Get meta for series, map to actionBar\r\n  // const displaySet = DisplaySetService.getDisplaySetByUID(\r\n  //   dSet.displaySetInstanceUID\r\n  // );\r\n  // TODO: This display contains the meta for all instances.\r\n  // That can't be right...\r\n  // console.log('DISPLAYSET', displaySet);\r\n  // const seriesMeta = DicomMetadataStore.getSeries(this.props.displaySet.StudyInstanceUID, '');\r\n  // console.log(seriesMeta);\r\n\r\n  const cine = cines[viewportIndex];\r\n  const isPlaying = (cine && cine.isPlaying) || false;\r\n  const frameRate = (cine && cine.frameRate) || 24;\r\n\r\n  return (\r\n    <div className=\"relative flex flex-row w-full h-full overflow-hidden\">\r\n      <CornerstoneViewport\r\n        onElementEnabled={\r\n          onElementEnabled ? onElementEnabled : defaultOnElementEnabled\r\n        }\r\n        viewportIndex={viewportIndex}\r\n        imageIds={imageIds}\r\n        imageIdIndex={initialImageIdIndex}\r\n        initialViewport={displaySet.initialViewport} // from hanging protocol\r\n        stageChanged={stageChangedRef.current}\r\n        // Sync resize throttle w/ sidepanel animation duration to prevent\r\n        // seizure inducing strobe blinking effect\r\n        resizeRefreshRateMs={150}\r\n        // TODO: ViewportGrid Context?\r\n        isActive={true} // todo\r\n        isStackPrefetchEnabled={true} // todo\r\n        isPlaying={isPlaying}\r\n        frameRate={frameRate}\r\n        isOverlayVisible={true}\r\n        loadingIndicatorComponent={ViewportLoadingIndicator}\r\n        viewportOverlayComponent={props => {\r\n          return (\r\n            <ViewportOverlay\r\n              {...props}\r\n              activeTools={ToolBarService.getActiveTools()}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n      {childrenWithProps}\r\n    </div>\r\n  );\r\n}\r\n\r\nOHIFCornerstoneViewport.propTypes = {\r\n  displaySet: PropTypes.object,\r\n  viewportIndex: PropTypes.number,\r\n  dataSource: PropTypes.object,\r\n  children: PropTypes.node,\r\n  customProps: PropTypes.object,\r\n  ToolBarService: PropTypes.object,\r\n};\r\n\r\nOHIFCornerstoneViewport.defaultProps = {\r\n  customProps: {},\r\n};\r\n\r\nconst _viewportLabels = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'];\r\n\r\nfunction _getCornerstoneStack(displaySet, dataSource) {\r\n  // Get stack from Stack Manager\r\n  const storedStack = StackManager.findOrCreateStack(displaySet, dataSource);\r\n\r\n  // Clone the stack here so we don't mutate it\r\n  const stack = Object.assign({}, storedStack);\r\n\r\n  return stack;\r\n}\r\n\r\nasync function _getViewportData(dataSource, displaySet) {\r\n  const stack = _getCornerstoneStack(displaySet, dataSource);\r\n\r\n  const viewportData = {\r\n    StudyInstanceUID: displaySet.StudyInstanceUID,\r\n    displaySetInstanceUID: displaySet.displaySetInstanceUID,\r\n    stack,\r\n  };\r\n\r\n  return viewportData;\r\n}\r\n\r\nfunction _subscribeToJumpToMeasurementEvents(\r\n  MeasurementService,\r\n  DisplaySetService,\r\n  element,\r\n  viewportIndex,\r\n  displaySetInstanceUID,\r\n  viewportGridService\r\n) {\r\n  const { unsubscribe } = MeasurementService.subscribe(\r\n    MeasurementService.EVENTS.JUMP_TO_MEASUREMENT,\r\n    ({ measurement }) => {\r\n      if (!measurement) return;\r\n      // check if the correct viewport index.\r\n      // if (viewportIndex !== jumpToMeasurementViewportIndex) {\r\n      //   // Event for a different viewport.\r\n      //   return;\r\n      // }\r\n\r\n      // Jump the the measurement if the displaySetInstanceUID matches\r\n      if (measurement.displaySetInstanceUID === displaySetInstanceUID) {\r\n        _jumpToMeasurement(\r\n          measurement,\r\n          element,\r\n          viewportIndex,\r\n          MeasurementService,\r\n          DisplaySetService,\r\n          viewportGridService\r\n        );\r\n      }\r\n    }\r\n  );\r\n\r\n  return unsubscribe;\r\n}\r\n\r\nfunction _checkForCachedJumpToMeasurementEvents(\r\n  MeasurementService,\r\n  DisplaySetService,\r\n  element,\r\n  viewportIndex,\r\n  displaySetInstanceUID,\r\n  viewportGridService\r\n) {\r\n  // Check if there is a queued jumpToMeasurement event\r\n  const measurementIdToJumpTo = MeasurementService.getJumpToMeasurement(\r\n    viewportIndex\r\n  );\r\n\r\n  if (measurementIdToJumpTo && element) {\r\n    // Jump to measurement if the measurement exists\r\n    const measurement = MeasurementService.getMeasurement(\r\n      measurementIdToJumpTo\r\n    );\r\n\r\n    if (measurement.displaySetInstanceUID === displaySetInstanceUID) {\r\n      _jumpToMeasurement(\r\n        measurement,\r\n        element,\r\n        viewportIndex,\r\n        MeasurementService,\r\n        DisplaySetService,\r\n        viewportGridService\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction _jumpToMeasurement(\r\n  measurement,\r\n  targetElement,\r\n  viewportIndex,\r\n  MeasurementService,\r\n  DisplaySetService,\r\n  viewportGridService\r\n) {\r\n  const { displaySetInstanceUID, SOPInstanceUID } = measurement;\r\n\r\n  const referencedDisplaySet = DisplaySetService.getDisplaySetByUID(\r\n    displaySetInstanceUID\r\n  );\r\n\r\n  const imageIndex = referencedDisplaySet.images.findIndex(\r\n    i => i.SOPInstanceUID === SOPInstanceUID\r\n  );\r\n\r\n  setCornerstoneMeasurementActive(measurement);\r\n  viewportGridService.setActiveViewportIndex(viewportIndex);\r\n  if (targetElement !== null) {\r\n    const enabledElement = cornerstone.getEnabledElement(targetElement);\r\n\r\n    // Wait for the image to update or we get a race condition when the element has only just been enabled.\r\n    const scrollToHandler = evt => {\r\n      scrollToIndex(targetElement, imageIndex);\r\n      targetElement.removeEventListener(\r\n        'cornerstoneimagerendered',\r\n        scrollToHandler\r\n      );\r\n    };\r\n    targetElement.addEventListener('cornerstoneimagerendered', scrollToHandler);\r\n\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(targetElement);\r\n    }\r\n\r\n    // Jump to measurement consumed, remove.\r\n    MeasurementService.removeJumpToMeasurement(viewportIndex);\r\n  }\r\n}\r\n\r\nexport default OHIFCornerstoneViewport;\r\n","import csTools from 'cornerstone-tools';\r\n\r\nexport default function _setActiveAndPassiveToolsForElement(element, tools) {\r\n  const BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool');\r\n\r\n  tools.forEach(tool => {\r\n    if (tool.prototype instanceof BaseAnnotationTool) {\r\n      // BaseAnnotationTool would likely come from csTools lib exports\r\n      const toolName = new tool().name;\r\n      csTools.setToolPassiveForElement(element, toolName); // there may be a better place to determine name; may not be on uninstantiated class\r\n    }\r\n  });\r\n\r\n  csTools.setToolActiveForElement(element, 'Pan', { mouseButtonMask: 4 });\r\n  csTools.setToolActiveForElement(element, 'Zoom', { mouseButtonMask: 2 });\r\n  csTools.setToolActiveForElement(element, 'Wwwc', { mouseButtonMask: 1 });\r\n  csTools.setToolActiveForElement(element, 'StackScrollMouseWheel', {}); // TODO: Empty options should not be required\r\n  csTools.setToolActiveForElement(element, 'PanMultiTouch', { pointers: 2 }); // TODO: Better error if no options\r\n  csTools.setToolActiveForElement(element, 'ZoomTouchPinch', {});\r\n  csTools.setToolEnabledForElement(element, 'Overlay', {});\r\n}\r\n"],"names":["ViewportLoadingIndicator","error","className","message","propTypes","percentComplete","PropTypes","defaultProps","globalImageIdSpecificToolStateManager","cornerstoneTools","toolsGroupedByType","touch","csTools","annotations","other","ViewportOverlay","imageId","scale","windowWidth","windowCenter","imageIndex","stackSize","activeTools","overlay","isZoomActive","includes","isWwwcActive","instanceNumber","cornerstone","classnames","toFixed","scrollToIndex","BaseAnnotationTool","StackManager","OHIF","OHIFCornerstoneViewport","children","dataSource","displaySet","onElementEnabled","element","viewportIndex","servicesManager","commandsManager","services","ToolBarService","DisplaySetService","MeasurementService","HangingProtocolService","useState","viewportData","setViewportData","useCine","cines","cineService","useViewportGrid","viewportGridService","viewports","isMounted","useRef","stageChangedRef","onNewImage","callback","addEventListener","handler","removeEventListener","useEffect","current","clearStacks","unsubscribe","subscribe","EVENTS","STAGE_CHANGE","setCine","id","StudyInstanceUID","displaySetInstanceUID","sopClassUids","length","console","warn","_getViewportData","then","data","unsubscribeFromJumpToMeasurementEvents","JUMP_TO_MEASUREMENT","measurement","_jumpToMeasurement","_subscribeToJumpToMeasurementEvents","measurementIdToJumpTo","getJumpToMeasurement","getMeasurement","_checkForCachedJumpToMeasurementEvents","renderedCallback","childrenWithProps","stack","imageIds","initialImageIdIndex","map","child","index","React","key","cine","isPlaying","frameRate","evt","targetElement","detail","tools","Object","keys","forEach","toolsGroup","push","getTools","toolAlias","state","primaryToolId","tool","prototype","toolName","name","mouseButtonMask","pointers","setActiveAndPassiveToolsForElement","filter","configuration","renderDashed","image","imageIdIndex","initialViewport","stageChanged","resizeRefreshRateMs","isActive","isStackPrefetchEnabled","isOverlayVisible","loadingIndicatorComponent","viewportOverlayComponent","props","getActiveTools","customProps","_getCornerstoneStack","storedStack","findOrCreateStack","assign","SOPInstanceUID","getDisplaySetByUID","images","findIndex","i","toolState","saveToolState","imageIdSpecificToolState","toolType","toolSpecificToolData","active","ex","setCornerstoneMeasurementActive","setActiveViewportIndex","enabledElement","scrollToHandler","removeJumpToMeasurement"],"sourceRoot":""}